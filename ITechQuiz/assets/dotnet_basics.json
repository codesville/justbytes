{"QandAList":
	[
				{"category":".NET","topic_id":"11","question":"What is CLR?","answer":"CLR stands for Common Language Runtime and it forms the heart of the .NET framework.All Languages have runtime and its the responsibility of the runtime to take care of the code execution of the program.Following are the responsibilities of CLR: Garbage Collection,Code Access Security,Code Verification,IL( Intermediate language )-to-native translators and optimizer's"},
				{"category":".NET","topic_id":"11","question":"What are different types of Assembly?","answer":"Private and Public assembly.A private assembly is normally used by a single application, and is stored in the application's directory, or a sub-directory beneath. A shared assembly is normally stored in the global assembly cache, which is a repository of assemblies maintained by the .NET runtime. Shared assemblies are usually libraries of code which many applications will find useful, e.g. Crystal report classes which will be used by all application for Reports."},
				{"category":".NET","topic_id":"11","question":"What is NameSpace?","answer":"NameSpace has two basic functionality:Logically group types.By qualifying class name with namespace collision amongst other class names can be removed."},
				{"category":".NET","topic_id":"11","question":"What is GAC?","answer":"GAC (Global Assembly Cache) is used where shared .NET assembly reside.Its used, if the application has to be shared among several application."},
				{"category":".NET","topic_id":"11","question":"What is garbage collection?","answer":"Garbage collection is a CLR feature which automatically manages memory.CLR automatically releases objects when they are no longer referenced and in use."},
				{"category":".NET","topic_id":"11","question":"What is reflection?","answer":"Metadata information about types stored in modules can be accessed by mechanism called as 'Reflection'.System.Reflection can be used to browse through the metadata information."},
				{"category":".NET","topic_id":"11","question":"What is Boxing and Unboxing?","answer":"Boxing permits any value type to be implicitly converted to type object or to any interface type implemented by value type.Boxing is process in which a object instances created and copying value types value in to that instance. Unboxing is reverse of boxing operation where the value is copied from the instance in to appropriate storage location."},
				{"category":".NET","topic_id":"11","question":"What is CODE Access security?","answer":"CAS is part of .NET security model that determines whether or not a piece of code is allowed to run and what resources it can use while running."}			
	]
}
