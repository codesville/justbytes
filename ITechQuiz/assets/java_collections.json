{"QandAList":
	[
				{"category":"Java","topic_id":"5","question":"What is difference between ArrayList and vector?","answer":"ArrayList is not thread-safe whereas Vector is thread-safe. In Vector class each method like add(), get(int i) is surrounded with a synchronized block and thus making Vector class thread-safe.Internally, both the ArrayList and Vector hold onto their contents using an Array. When an element is inserted into an ArrayList or a Vector, the object will need to expand its internal array if it runs out of room. A Vector defaults to doubling the size of its array, while the ArrayList increases its array size by 50 percent."},
				{"category":"Java","topic_id":"5","question":"How can ArrayList be synchronized without using Vector?","answer":"Collection.synchronizedList(List list)"},
				{"category":"Java","topic_id":"5","question":"What is difference between HashMap and HashTable? ","answer":"Both collections implements Map. Both collections store value as key-value pairs. The key differences between the two are  1. Hashmap is not synchronized in nature but hashtable is.  2. Another difference is that iterator in the HashMap is fail-safe while the enumerator for the Hashtable isn't.HashMap permits null values and only one null key, while Hashtable doesn't allow key or value as null."},
				{"category":"Java","topic_id":"5","question":"What are the classes implementing List interface?","answer":"ArrayList : It is a resizable array implementation.Vector: It is thread-safe implementation of ArrayList.LinkedList: the LinkedList also implements Queue interface and provide FIFO(First In First Out) operation for add operation. It is faster if than ArrayList if it performs insertion and deletion of elements from the middle of a list."},
				{"category":"Java","topic_id":"5","question":"Which all classes implement Set interface?","answer":"A Set is a collection that contains no duplicate elements. More formally, sets contain no pair of elements e1 and e2 such that e1.equals(e2), and at most one null element. HashSet,SortedSet and TreeSet are the commonly used class which implements Set interface."},
				{"category":"Java","topic_id":"5","question":"What is difference between List and a Set?","answer":"1) List can contain duplicate values but Set doesn't allow it. Set allows only to unique elements.2) List allows retrieval of data to be in same order in the way it is inserted but Set doesnt ensures the sequence in which data can be retrieved.(Except HashSet) "},
				{"category":"Java","topic_id":"5","question":"When to use ArrayList vs LinkedList ?","answer":" Adding new elements is pretty fast for either type of list. For the ArrayList, doing  random lookup using 'get' is fast, but for LinkedList, it's slow. It's slow because there's no efficient way to index into the middle of a linked list. When removing elements, using ArrayList is slow. This is because all remaining elements in the underlying array of Object instances must be shifted down for each remove operation. But here LinkedList is fast, because deletion can be done simply by changing a couple of links. So an ArrayList works best for cases where you're doing random access on the list, and a LinkedList works better if you're doing a lot of editing in the middle of the list. "},
				{"category":"Java","topic_id":"5","question":"If an ArrayList has to be iterate to read data only, what are the possible ways and which is the fastest?","answer":"Using for loop or using iterator of ArrayList. The first option is faster than using iterator. Because value stored in arraylist is indexed access. So while accessing the value is accessed directly as per the index."},
				{"category":"Java","topic_id":"5","question":"If accessing through iterator is slow then why do we need it and when to use it?","answer":"For loop does not allow updating the array(add or remove operation) inside the loop whereas Iterator does. Also Iterator can be used where there is no clue what type of collections will be used because all collections have iterator."},
				{"category":"Java","topic_id":"5","question":"What is ConcurrentHashMap? ","answer":"A concurrentHashMap is thread-safe implementation of Map interface. In this class put and remove method are synchronized but not get method. This class is different from Hashtable in terms of locking; it means that hashtable use object level lock but this class uses bucket level lock thus having better performance."},
				{"category":"Java","topic_id":"5","question":"Which is faster to iterate LinkedHashSet or LinkedList?","answer":"LinkedList"},
				{"category":"Java","topic_id":"5","question":"Arrange in the order of speed - HashMap,HashTable, Collections.synchronizedMap,concurrentHashmap","answer":"HashMap is fastest, ConcurrentHashMap,Collections.synchronizedMap,HashTable. "},
				{"category":"Java","topic_id":"5","question":"What is WeakHashMap?","answer":"A hashtable-based Map implementation with weak keys. An entry in a WeakHashMap will automatically be removed when its key is no longer in ordinary use. More precisely, the presence of a mapping for a given key will not prevent the key from being discarded by the garbage collector, that is, made finalizable, finalized, and then reclaimed. When a key has been discarded its entry is effectively removed from the map, so this class behaves somewhat differently than other Map implementations."},
				{"category":"Java","topic_id":"5","question":"What is difference between Synchronized Collection and ConcurrentCollection?","answer":"Java5 has added several new ConcurrentCollection classes e.g. ConcurrentHashMap, CopyOnWriteArrayList, BlockingQueue etc, which has made Interview questions on Java Collection even trickier. Java Also provided way to get Synchronized copy of collection e.g. ArrayList, HashMap by using Collections.synchronizedMap() Utility function.One Significant difference is that ConccurentCollections has better performance than synchronized Collection because they lock only a portion of Map to achieve concurrency and Synchronization."},
				{"category":"Java","topic_id":"5","question":"What method should the key class of Hashmap override?","answer":"equals() and hashCode()"},
				{"category":"Java","topic_id":"5","question":"Which system class method permits to copy the elements of one array to other array?","answer":"System.arraycopy ()"}
	]
}