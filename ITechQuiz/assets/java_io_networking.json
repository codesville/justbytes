{"QandAList":
	[
				{"category":"Java","topic_id":"9","question":"What is the difference between the Reader/Writer class hierarchy and the InputStream/OutputStream class hierarchy?","answer":"The Reader/Writer class hierarchy is character-oriented, and the InputStream/OutputStream class hierarchy is byte-oriented."},
				{"category":"Java","topic_id":"9","question":"What is the difference between the File and RandomAccessFile classes?","answer":"The File class encapsulates the files and directories of the local file system. The RandomAccessFile class provides the methods needed to directly access data contained in any part of a file."},
				{"category":"Java","topic_id":"9","question":"What is the difference between Serializalble and Externalizable interface?","answer":"When you use Serializable interface, your class is serialized automatically by default. But you can override writeObject() and readObject() two methods to control more complex object serialization process. When you use Externalizable interface, you have a complete control over your class's serialization process."},
				{"category":"Java","topic_id":"9","question":"What are File Locks?","answer":"File Locks can either be exclusive or shared.An exclusive lock can be acquired on a file only if there are no processes or applications accessing the file. It is possible for one or more processes to have any number of locks on the same file but in different region of a file in the case of a shared lock. Some operating systems doesn't support the concept of shared locking.Java provides lock() and tryLock() methods in FileChannel class for getting a lock over the file object."},
				{"category":"Java","topic_id":"9","question":"What is NIO?","answer":"New I/O. It was launched as part of JDK 1.4.The NIO API introduces a new primitive I/O abstraction called channel. A channel represents an open connection to an entity such as a hardware device, a file, a network socket, or a program component that is capable of performing one or more distinct I/O operations, for example reading or writing.Buffer classes provide a mechanism to store a set of primitive data elements in an in-memory container.Non-blocking operations are the most popular and widely used feature of the new I/O API.In order to configure the channel to be non-blocking, you should call the configureBlocking(false) method.NIO construction makes I/O faster than traditional I/O especially in a program with significant I/O operations like sockets."},
				{"category":"Java","topic_id":"9","question":"What is an IO filter?","answer":"An IO filter is an object that reads from one stream and writes to another, usually altering the data in some way as it is passed from one stream to another."},
				{"category":"Java","topic_id":"9","question":"What is the difference between URL instance and URLConnection instance?","answer":"A URL instance represents the location of a resource, and a URLConnection instance represents a link for accessing or communicating with the resource at the location. "},
				{"category":"Java","topic_id":"9","question":"What information is needed to create a TCP Socket?","answer":"The Local System's IP Address and Port Number. And the Remote System's IPAddress and Port Number. "},
				{"category":"Java","topic_id":"9","question":"How can I find out the current IP address for my machine?","answer":"The InetAddress has a static method called getLocalHost() which will return the current address of the local machine. You can then use the getHostAddress() method to get the IP address."},
				{"category":"Java","topic_id":"9","question":"What is the difference between TCP and UDP ?","answer":"1. TCP can establishes a Connection and UDP cannot.2. TCP provides a stream of unlimited length, UDP sends small packets.3.TCP guarantees that as long as you have a connection data sent will arrive at the destination, UDP provides not guarantee delivery. 4.UDP is faster for sending small amounts of data since no connection setup is required, the data can be sent in less time then it takes for TCP to establish a connection."},
				{"category":"Java","topic_id":"9","question":"What is the purpose of HTTP tunneling?","answer":"HTTP tunneling is used to encapsulate other protocols within the HTTP or HTTPS protocols. It is typically used to pass protocols that would normally be blocked by a firewall through the firewall in a controlled manner."},
				{"category":"Java","topic_id":"9","question":"What are the 2 main classes used in Socket programming?","answer":"Socket and ServerSocket"}
	]
}