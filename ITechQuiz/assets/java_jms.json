{"QandAList":
	[
				{"category":"Java","topic_id":"25","question":"What is JMS?","answer":"Java Message Service is the new standard for interclient communication. It allows J2EE application components to create, send, receive, and read messages. It enables distributed communication that is loosely coupled, reliable, and asynchronous."},
				{"category":"Java","topic_id":"25","question":"What messaging models does JMS provide ?","answer":"publish-and-subscribe and point-to-point queuing."},
				{"category":"Java","topic_id":"25","question":"What are the types of messaging?","answer":"Synchronous messaging involves a client that waits for the server to respond to a message. Asynchronous messaging involves a client that does not wait for a message from the server. An event is used to trigger a message from a server."},
				{"category":"Java","topic_id":"25","question":"What is publish/subscribe messaging?","answer":"With publish/subscribe message passing the sending application/client establishes a named topic in the JMS broker/server and publishes messages to this queue. The receiving clients register (specifically, subscribe) via the broker to messages by topic; every subscriber to a topic receives each message published to that topic. There is a one-to-many relationship between the publishing client and the subscribing clients."},
				{"category":"Java","topic_id":"25","question":"How does a typical client perform the communication?","answer":"Use JNDI to locate administrative objects.Locate a single ConnectionFactory object.Locate one or more Destination objects.Use the ConnectionFactory to create a JMS Connection.Use the Connection to create one or more Session(s).Use a Session and the Destinations to create the MessageProducers and MessageConsumers needed.Perform your communication."},
				{"category":"Java","topic_id":"25","question":"What are the types of Messages?","answer":"Map message,Object message,Text message,Stream Message,Byte Message"},
				{"category":"Java","topic_id":"25","question":"What are poison messages?","answer":"Poison messages, messages the application can never successfully process.A badly-formatted message arrives on a queue. Such a message might make the receiving application fail and back out the receipt of the message. In this situation, such a message might be received, then returned to the queue, repeatedly. These messages are known as poison messages. The ConnectionConsumer must be able to detect poison messages and reroute them to an alternative destination. "},
				{"category":"Java","topic_id":"25","question":"When are messages removed from the queue ?","answer":"When an application uses ConnectionConsumers, JMS might need to remove messages from the queue in a number of situations:1) Badly formatted message that JMS cannot parse.2) Poison message:A message might reach the backout threshold, but the ConnectionConsumer fails to requeue it on the backout queue.3)No interested ConnectionConsumer: In point-to-point messaging, when the QueueConnectionFactory is set so that it does not retain unwanted messages, a message arrives that is unwanted by any of the ConnectionConsumers. "},
				{"category":"Java","topic_id":"25","question":"What are the Message headers in a JMS message ","answer":"JMSDestination - send or publish method,JMSDeliveryMode - send or publish method,JMSExpiration - send or publish method,JMSPriority - send or publish method,JMSMessageID - send or publish method,JMSTimestamp - send or publish method,JMSCorrelationID - Client,JMSReplyTo - Client,JMSType - Client,JMSRedelivered - JMS provider "},
				{"category":"Java","topic_id":"25","question":"What is the difference between pub/sub and Point to Point messaging? ","answer":"Publish/Subscriber can have multiple Publisher who publish message and multiple Subscriber who subscribe the messages.One message can have more then one subscriber. In P2P messaging, one message have only one subscriber. Multiple publisher can send multiple messages to the Queue but each message has only one subscriber."},
				{"category":"Java","topic_id":"25","question":"What are the two parts of a message and explain them?","answer":"A message basically has two parts : a header and payload. The header is comprised of special fields that are used to identify the message, declare attributes of the message, and provide information for routing. Payload is the type of application data the message contains."},
				{"category":"Java","topic_id":"25","question":"What is meant by a durable subscriber?","answer":"When a subscribing client (via it session with the JMS server) requests a durable subscription, the JMS server will save any messages intended for the subscriber during periods when the subscriber is inactive.A durable subscriber registers a durable subscription with a unique identity(setClientId) that is retained by JMS.If there is no active subscriber for a durable subscription, JMS retains the subscription's messages until they are received by the subscription or until they expire.The next time the client reconnects, it must provide the same client ID and durable subscription name, in order to receive any accumulated messages that have been held for the client ID/subscription name combination."},
				{"category":"Java","topic_id":"25","question":"What are the different acknowledgement modes?","answer":"AUTO_ACKNOWLEDGE, DUPS_OK_ACKNOWLEDGE,  CLIENT_ACKNOWLEDGE"}
	]
}