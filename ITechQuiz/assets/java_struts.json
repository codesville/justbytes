{"QandAList":
	[
				{"category":"Java","topic_id":"24","question":"What is MVC?","answer":"Model-View-Controller (MVC) is a design pattern put together to help control change. MVC decouples interface from business logic and data. Model : The model contains the core of the application's functionality. The model encapsulates the state of the application. Sometimes the only functionality it contains is state. It knows nothing about the view or controller.View: The view provides the presentation of the model. It is the look of the application. The view can access the model getters, but it has no knowledge of the setters. In addition, it knows nothing about the controller. The view should be notified when changes to the model occur.    Controller:The controller reacts to the user input. It creates and sets the model."},
				{"category":"Java","topic_id":"24","question":"What is ActionServlet?","answer":"ActionServlet is a simple servlet which is the backbone of all Struts applications. It is the main Controller component that handles client requests and determines which Action will process each received request. It serves as an Action factory for creating specific Action classes based on user's request."},
				{"category":"Java","topic_id":"24","question":"What is role of ActionServlet?","answer":"ActionServlet performs the role of Controller:Process user requests.Determine what the user is trying to achieve according to the request.Pull data from the model (if necessary) to be given to the appropriate view,Select the proper view to respond to the user.   Delegates most of this grunt work to Action classes.    Is responsible for initialization and clean-up of resources"},
				{"category":"Java","topic_id":"24","question":"What is the ActionForm?","answer":"ActionForm is javabean which represents the form inputs containing the request parameters from the View referencing the Action bean."},
				{"category":"Java","topic_id":"24","question":"What are the core methods of ActionForm?","answer":"validate() and reset() methods validate() : Used to validate properties after they have been populated; Called before FormBean is handed to Action. Returns a collection of ActionError as ActionErrors.reset() method is called by Struts Framework with each request that uses the defined ActionForm. The purpose of this method is to reset all of the ActionForm's data members prior to the new request values being set. "},
				{"category":"Java","topic_id":"24","question":"What is ActionMapping?","answer":"Action mapping contains all the deployment information for a particular Action bean. This class is to determine where the results of the Action will be sent once its processing is complete."},
				{"category":"Java","topic_id":"24","question":"What is role of Action Class?","answer":"An Action Class performs a role of an adapter between the contents of an incoming HTTP request and the corresponding business logic that should be executed to process this request. "},
				{"category":"Java","topic_id":"24","question":"Which method in Action class needs to be overriden?","answer":"execute() method of Action class is where the business logic is executed."},
				{"category":"Java","topic_id":"24","question":"What design patterns are used in Struts?","answer":"Struts is based on model 2 MVC (Model-View-Controller) architecture. Struts controller uses the command design pattern and the action classes use the adapter design pattern. The process() method of the RequestProcessor uses the template method design pattern."},
				{"category":"Java","topic_id":"24","question":"What are the different kinds of actions in Struts?","answer":"ForwardAction, IncludeAction,   DispatchAction,  LookupDispatchAction, SwitchAction"},
				{"category":"Java","topic_id":"24","question":"What is DispatchAction?","answer":"The DispatchAction class is used to group related actions into one class. Using this class, you can have a method for each logical action compared than a single execute method. The DispatchAction dispatches to one of the logical actions represented by the methods. It picks a method to invoke based on an incoming request parameter. The value of the incoming parameter is the name of the method that the DispatchAction will invoke."},
				{"category":"Java","topic_id":"24","question":"What is the difference between ForwardAction and IncludeAction?","answer":"IncludeAction is used only if the action is going to be included by another action or jsp. Use ForwardAction to forward a request to another resource in your application, such as a Servlet that already does business logic processing or even another JSP page. "},
				{"category":"Java","topic_id":"24","question":"What is difference between LookupDispatchAction and DispatchAction?","answer":"The difference between LookupDispatchAction and DispatchAction is that the actual method that gets called in LookupDispatchAction is based on a lookup of a key value instead of specifying the method name directly. "},
				{"category":"Java","topic_id":"24","question":"What is SwitchAction?","answer":"SwitchAction class provides a means to switch from a resource in one module to another resource in a different module. SwitchAction is useful only if you have multiple modules in your Struts application."},
				{"category":"Java","topic_id":"24","question":"What is DynaActionForm?","answer":"A specialized subclass of ActionForm that allows the creation of form beans with dynamic sets of properties (configured in configuration file), without requiring the developer to create a Java class for each type of form bean."},
				{"category":"Java","topic_id":"24","question":"How to display validation errors on jsp page?","answer":"<html:errors/> tag displays all the errors. <html:errors/> iterates over ActionErrors request attribute. "},
				{"category":"Java","topic_id":"24","question":"What are the various Struts tag libraries?","answer":"HTML Tags,Bean Tags, Logic Tags,Template Tags, Nested Tags,Tiles Tags,"},
				{"category":"Java","topic_id":"24","question":"What is the use of <logic:iterate>?","answer":"<logic:iterate> repeats the nested body content of this tag over a specified collection."},
				{"category":"Java","topic_id":"24","question":"What are differences between <bean:message> and <bean:write>","answer":"<bean:message>: is used to retrive keyed values from resource bundle. It also supports the ability to include parameters that can be substituted for defined placeholders in the retrieved string.<bean:write>: is used to retrieve and print the value of the bean property. <bean:write> has no body."},
				{"category":"Java","topic_id":"24","question":"How are exceptions handled in struts?","answer":"Programmatic exception handling :Explicit try/catch blocks in any code that can throw exception.Declarative exception handling :You can either define <global-exceptions> handling tags in your struts-config.xml or define the exception handling tags within <action></action> tag. It works well when custom page needed when error occurs. This approach applies only to exceptions thrown by Actions."},
				{"category":"Java","topic_id":"24","question":"How can we make message resources definitions file available to the Struts framework environment?","answer":"By adding this file to struts-config.xml.<message-resources parameter=\"com.login.struts.ApplicationResources\"/>"},
				{"category":"Java","topic_id":"24","question":"How validation is performed in struts application?","answer":"In struts validation is performed using validator framework, Validator Framework in Struts consist of two XML configuration files.1. validator-rules.xml file: which contains the default struts pluggable validator definitions. You can add new validation rules by adding an entry in this file. 2. Validation.xml file which contains details regarding the validation routines that are applied to the different Form Beans. "},
				{"category":"Java","topic_id":"24","question":"What are Pull-MVC and push-MVC based architecture ? Which architecture does Struts2 follow ?","answer":"Pull-MVC and Push-MVC are better understood with how the view layer is getting data i.e. Model to render. In case of Push-MVC the data( Model) is constructed and given to the view layer by the Controllers by putting it in the scoped variables like request or session. Typical example is Spring MVC and Struts1. Pull-MVC on the other hand puts the model data typically constructed in Controllers are kept in a common place i.e. in actions, which then gets rendered by view layer. Struts2 is a Pull-MVC based architecture, in which all data is stored in Value Stack and retrieved by view layer for rendering."},
				{"category":"Java","topic_id":"24","question":"Are Interceptors in Struts2 thread safe ?","answer":"No,Unlike Struts2 action, Interceptors are shared between requests, so thread issues will come if not taken care of."},
				{"category":"Java","topic_id":"24","question":"Which class is the front-controller in Struts2 ?","answer":"The class org.apache.struts2.dispatcher.FilterDispatcher (deprecated) is the front controller in Struts2.StrutsPrepareAndExecuteFilter is to be used post Struts 2.1.3"},
				{"category":"Java","topic_id":"24","question":"What is the relation between ValueStack and OGNL ?","answer":"A ValueStack is a place where all the data related to action and the action itself is stored. OGNL is a mean through which the data in the ValueStack is manipulated."},
				{"category":"Java","topic_id":"24","question":"What is execute and wait interceptor ? ","answer":"The ExecuteAndWaitInterceptor is great interceptor provided out of box in Struts2 for running long-lived actions in the background while showing the user a nice progress meter or a progress bar. For example while uploading a large file to the server "},
				{"category":"Java","topic_id":"24","question":"What is struts.devMode and why it is used ?","answer":"struts.devMode is a key used in struts.properties file (Can also be configured in struts.xml file as <constant name=\"struts.devMode\" value=\"true\" />) , to represent whether the framework is running in development mode or production mode by setting true or false."},
				{"category":"Java","topic_id":"24","question":"What is the difference between Action and ActionSupport ?","answer":"Action is interface defines some string like SUCCESS,ERROR etc  and an execute() method. For convenience Developer implement this interface to have access to String field in action methods. ActionSupport on other hand implements Action and some other interfaces and provides some feature like data validation and localized error messaging  when extended in the action classes by developers. "},
				{"category":"Java","topic_id":"24","question":"Who loads the struts.xml file ? Which Struts2 API loads the struts.xml file? ","answer":"n Struts2 FilterServlet is the responsible class for loading struts.xml file as we deploy the application on the container.Unlike Servlet (as with Struts1) needs the load-on-startup tag to load the front controller,a filter doesn't need to have load on startup tag to be loaded as the application is deployed. As with servlet specification a filter is loaded/executed as the application  starts up."},
				{"category":"Java","topic_id":"24","question":"What is the difference between EL and OGNL ? ","answer":"OGNL is much like EL in JSPs,a language to traverse or manupulate objects like request , session or application in web context.OGNL stands for Object graph navigation language,which is used internally by Struts2, however we are not bound to use OGNL in our JSPs, we can use EL.But OGNL provides much more facilities than plain EL.For example while El interacts with the objects by means of getters/setters, OGNL supports whatever EL does along with lambda experssion, helps create functions on fly. OGNL has more flexible ways to deal with collection of objects."},
				{"category":"Java","topic_id":"24","question":"What are the difference between ActionContext and ServletActionContext ? ","answer":"ActionContext represents the context in which Action is executed, which itself doesn't hold any web parameters like session, request etc. ServletActionContext, extends the ActionContext and provides the web parameters  to the Action."},
				{"category":"Java","topic_id":"24","question":"What is the DispatchAction (Struts1) equivalent in Strtus2 ?  ","answer":"In Struts2, it comes by default.We need to provide the qualified methods in the action class( no need to inherit any class), and provide the mapping of action path/name to the method attribute in action tag(struts.xml) and proper code in view layer."}
	]
}